version: '3.9'

services:
  authentication:
    build: .
    container_name: authenticator_service
    command: bash -c "python manage.py makemigrations users && python manage.py migrate users && python manage.py collectstatic --noinput && gunicorn authenticator_service.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=authenticator_service.settings
      # - RABBITMQ_URL=${RABBITMQ_URL}
    volumes:
      - .:/app
    depends_on:
      # - rabbitmq
      - db
    networks:
      - default

  db:
    image: postgres:17.2-alpine
    container_name: prohub_auth_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default

  # rabbitmq:
  #   image: rabbitmq:management
  #   container_name: prohub_rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     RABBITMQ_URL: ${RABBITMQ_URL}
  #   networks:
  #     - default
  
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - authentication
    networks:
      - default

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done'"

networks:
  default:
    driver: bridge

volumes:
  db_data:
    driver: local